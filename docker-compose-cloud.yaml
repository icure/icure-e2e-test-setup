version: "3.8"

services:
  couchdb:
    image: couchdb:3.2.2
    container_name: couchdb-test
    ports:
      - "${COUCHDB_PORT}:5984"
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}

  kraken-1:
    image: kraken:arm64
    container_name: kraken-1
    ports:
      - "5005:5005"
      - "16044:16043"
    environment:
      - ICURE_COUCHDB_URL=http://couchdb-test:5984
      - ICURE_COUCHDB_USERNAME=${COUCHDB_USER}
      - ICURE_COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    depends_on:
      - couchdb

  kraken-2:
    image: kraken:arm64
    container_name: kraken-2
    ports:
      - "5006:5005"
      - "16045:16043"
    environment:
      - ICURE_COUCHDB_URL=http://couchdb-test:5984
      - ICURE_COUCHDB_USERNAME=${COUCHDB_USER}
      - ICURE_COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
    depends_on:
      - couchdb

  haproxy:
    image: haproxy:latest
    restart: always
    volumes:
      - ./haproxy/:/usr/local/etc/haproxy/
    ports:
      - "8080:8080"
    profiles:
      - haproxy

  init-db:
    build: ./docker/init_kraken
    depends_on:
      - kraken-1
      - kraken-2
    profiles:
      - init

  mock-msg-gw:
    image: mock:arm64
    container_name: mock
    ports:
      - "8081:8080"
    environment:
      - ICURE_URL=${MOCK_ICURE_URL}
      - ICURE_ADMIN_USER=${ICURE_MOCK_LOGIN}
      - ICURE_ADMIN_PWD=${ICURE_MOCK_PWD}
      - ICURE_PROCESS_GROUP_ID=${ICURE_TEST_GROUP_ID}
    profiles:
      - mock
# => ./haproxy/haproxy.cfg
# global
#   stats socket /usr/local/etc/haproxy/admin.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
#   log stdout format raw local0 info
# defaults
#   log global
#   option dontlognull
#   option http-server-close
#   timeout client 5m
#   timeout client-fin 50s
#   timeout connect 5s
#   timeout server 1d
#   timeout tunnel 20m
#   mode http
# frontend stats
#   bind *:16046
#   stats enable
#   stats uri /
#   stats refresh 10s
# frontend myfrontend
#   bind :8080
#   default_backend webservers
# backend webservers
#   option redispatch
#   server k1 kraken-1:16043 check
#   server k2 kraken-2:16043 check
